CREATE TABLE CLIENTE (
    CODIGO              INT PRIMARY KEY,
    NOME                VARCHAR(255) NOT NULL,
    SOBRENOME           VARCHAR(255) NOT NULL,
    DATA_NASCIMENTO     DATE NOT NULL,
    SEXO                VARCHAR(30) NOT NULL,
    EMAIL               VARCHAR(255) NOT NULL UNIQUE,
    PONTOS              INT,
    CLIENTE_INDICADOR   INT,
    RUA                 VARCHAR(255) NOT NULL,
    ESTADO              VARCHAR(255) NOT NULL,
    CEP                 VARCHAR(10) NOT NULL,
    NUMERO              VARCHAR(20) NOT NULL,
    BAIRRO              VARCHAR(255) NOT NULL,
    CONSTRAINT FK_CLIENTE_CLIENTE FOREIGN KEY (CLIENTE_INDICADOR)
        REFERENCES CLIENTE (CODIGO)
        ON DELETE SET NULL,
    CONSTRAINT CK_CLIENTE_CEP_FORMAT CHECK(REGEXP_LIKE(CEP, '^[0-9]{5}-[0-9]{3}$'))
);

CREATE TABLE TELEFONE (
    CODIGO              INT PRIMARY KEY,
    CODIGO_CLIENTE      INT NOT NULL,
    NUMERO              VARCHAR(20) NOT NULL,
    CONSTRAINT FK_TELEFONE_CLIENTE FOREIGN KEY (CODIGO_CLIENTE)
        REFERENCES CLIENTE(CODIGO)
        ON DELETE CASCADE,
    CONSTRAINT CK_TELEFONE_FORMAT
        CHECK (REGEXP_LIKE(NUMERO, '^\([0-9]{2}\) 9[0-9]{4}-[0-9]{4}$'))
);


CREATE TABLE EMAIL (
    CODIGO          INT PRIMARY KEY,
    ASSUNTO         VARCHAR (200),
    CONTEUDO        VARCHAR (500),
    DATA_ENVIO      TIMESTAMP NOT NULL,
    CLICOU_CONTEUDO CHAR(1) NOT NULL,
    ABRIU           CHAR(1) NOT NULL,
    COD_CLIENTE     INT NOT NULL,
    CONSTRAINT FK_EMAIL_COD_CLIENTE FOREIGN KEY (COD_CLIENTE) 
        REFERENCES CLIENTE(CODIGO),
    CONSTRAINT CK_ABRIU_EMAIL CHECK (ABRIU IN ('S', 'N')),
    CONSTRAINT CK_CLICOU_CONTEUDO_EMAIL CHECK (CLICOU_CONTEUDO IN ('S', 'N'))
);

CREATE TABLE CUPOM_DESCONTO (
	CODIGO      INT PRIMARY KEY, 
	DESCONTO    NUMERIC(5,2) NOT NULL,
	CONSTRAINT CK_DESCONTO CHECK (DESCONTO >= 0 AND DESCONTO <=100)
);


CREATE TABLE CARRINHO (
    CODIGO          INT PRIMARY KEY,
    CODIGO_CLIENTE  INT NOT NULL UNIQUE,
    CODIGO_CUPOM    INT,
    CONSTRAINT FK_CLIENTE_CARRINHO FOREIGN KEY (CODIGO_CLIENTE) 
        REFERENCES CLIENTE (CODIGO)
        ON DELETE CASCADE,
    CONSTRAINT FK_CUPOM_CARRINHO FOREIGN KEY (CODIGO_CUPOM)
        REFERENCES CUPOM_DESCONTO (CODIGO)
        ON DELETE SET NULL
        
);

CREATE TABLE CATEGORIA(
    CODIGO  INT PRIMARY KEY,
    NOME    VARCHAR (100) NOT NULL
);

CREATE TABLE PRODUTO (
    CODIGO          INT PRIMARY KEY,
    NOME            VARCHAR(100) NOT NULL,
    PRECO           NUMERIC(10,2) NOT NULL,
    DATA_FABRICACAO TIMESTAMP NOT NULL,
    DESCRICAO       VARCHAR(255),
    ESPECIFICACAO   VARCHAR(255),
    DATA_VALIDADE   TIMESTAMP NOT NULL,
    COD_CATEGORIA   INT NOT NULL,

    CONSTRAINT PRECO_POSITIVO CHECK (PRECO >= 0),
    CONSTRAINT DT_VALIDADE_VALIDA CHECK (DATA_VALIDADE >= DATA_FABRICACAO),
    CONSTRAINT FK_PRODUTO_CATEGORIA FOREIGN KEY (COD_CATEGORIA) REFERENCES CATEGORIA(CODIGO)
);

CREATE TABLE HISTORICO (
    CODIGO      INT PRIMARY KEY,
    DATA        TIMESTAMP DEFAULT SYSTIMESTAMP,
    COD_CLIENTE INT,
    COD_PRODUTO INT,

    CONSTRAINT FK_HIST_PRODUTO FOREIGN KEY (COD_PRODUTO)
        REFERENCES PRODUTO(CODIGO),
    CONSTRAINT FK_HIST_CLIENTE FOREIGN KEY (COD_CLIENTE)
        REFERENCES CLIENTE(CODIGO)
);

CREATE TABLE FOTOS_PRODUTO(
    PRODUTO_CODIGO  INT NOT NULL,
    URL             VARCHAR(255) NOT NULL,
    CONSTRAINT FK_FOTO_PRODUTO FOREIGN KEY (PRODUTO_CODIGO)
        REFERENCES PRODUTO(CODIGO) ON DELETE CASCADE,
    CONSTRAINT PK_FOTOS_PRODUTO PRIMARY KEY (PRODUTO_CODIGO, URL)
);

CREATE TABLE FORNECEDOR (
    CODIGO      INT PRIMARY KEY,
    HOME_PAGE   VARCHAR(100) NOT NULL,
    NOME        VARCHAR(100) NOT NULL,
    EMAIL       VARCHAR(100) NOT NULL, 
    TELEFONE    VARCHAR(50) NOT NULL,
    RUA         VARCHAR(100) NOT NULL,
    CEP         VARCHAR(30) NOT NULL,
    ESTADO      VARCHAR(50) NOT NULL,
    NUMERO      VARCHAR(10)NOT NULL,
    BAIRRO      VARCHAR(50) NOT NULL,
    CONSTRAINT CK_FORNECEDOR_CEP_FORMAT CHECK(REGEXP_LIKE(CEP, '^[0-9]{5}-[0-9]{3}$'))
);
 
CREATE TABLE TRANSPORTADORA(
    CODIGO              INT PRIMARY KEY,
    NOME                VARCHAR(255) NOT NULL,
    EMAIL               VARCHAR(255) NOT NULL,
    TELEFONE            VARCHAR(50) NOT NULL,
    SITE_TRANSPORTADORA VARCHAR(255),
    RUA                 VARCHAR(255) NOT NULL,
    CEP                 CHAR(9) NOT NULL,
    ESTADO              VARCHAR(50) NOT NULL,
    NUMERO              VARCHAR(20) NOT NULL,
    BAIRRO              VARCHAR(255) NOT NULL,
    CONSTRAINT CK_TRANSPORTADORA_CEP_FORMAT CHECK(REGEXP_LIKE(CEP, '^[0-9]{5}-[0-9]{3}$'))
);

CREATE TABLE NOTA_FISCAL (
	CODIGO 				INT PRIMARY KEY,
	CHAVE_DE_ACESSO		CHAR(44) NOT NULL,
	INSCRICAO_ESTADUAL	VARCHAR(9),
	VALOR_TOTAL			NUMERIC(10,2) NOT NULL,
	SERIE				INT NOT NULL,
	NUMERO				INT NOT NULL,

	CONSTRAINT CK_VALOR_TOTAL_POSITIVO CHECK (VALOR_TOTAL >= 0)
);

CREATE TABLE ORDEM_COMPRA( 
    CODIGO              INT PRIMARY KEY, 
    DATA_COMPRA         TIMESTAMP NOT NULL,
    STATUS_COMPRA       VARCHAR(255) NOT NULL, 
    DESCONTO            NUMERIC(5,2), 
    FRETE               NUMERIC(10,2) NOT NULL, 
    RUA                 VARCHAR(255) NOT NULL, 
    CEP                 CHAR(9) NOT NULL, 
    ESTADO              VARCHAR(50) NOT NULL, 
    NUMERO              VARCHAR(20) NOT NULL, 
    BAIRRO              VARCHAR(255) NOT NULL, 
    COD_TRANSPORTADORA  INT NOT NULL, 
    COD_NOTAFISCAL      INT NOT NULL, 
    COD_CLIENTE         INT NOT NULL, 

    CONSTRAINT FK_NOTA_FISCAL_ORDEM_COMPRA FOREIGN KEY (COD_NOTAFISCAL)
        REFERENCES NOTA_FISCAL(CODIGO),
    CONSTRAINT FK_ORDEM_COMPRA_COD_CLIENTE FOREIGN KEY (COD_CLIENTE) 
        REFERENCES CLIENTE(CODIGO)
        ON DELETE CASCADE,
    CONSTRAINT FK_ORDEM_COMPRA_COD_TRANSPORTADORA FOREIGN KEY (COD_TRANSPORTADORA) 
        REFERENCES TRANSPORTADORA(CODIGO),
    CONSTRAINT CK_ORDEM_COMPRA_DESCONTO_POSITIVO CHECK (DESCONTO >= 0 AND DESCONTO <= 100),
    CONSTRAINT CK_STATUS_ORDEM_COMPRA CHECK (STATUS_COMPRA IN ('Aguardando Pagamento', 'Em separação', 'Em transporte', 'Finalizada'))
);

CREATE TABLE CENTRO_DISTRIBUICAO(
    CODIGO  INT PRIMARY KEY,
    NOME    VARCHAR(200),
    RUA     VARCHAR(255) NOT NULL, 
    CEP     CHAR(9) NOT NULL, 
    ESTADO  VARCHAR(50) NOT NULL, 
    NUMERO  VARCHAR(20) NOT NULL, 
    BAIRRO  VARCHAR(255) NOT NULL,

    CONSTRAINT CK_CENTRO_CEP_FORMAT CHECK(REGEXP_LIKE(CEP, '^[0-9]{5}-[0-9]{3}$'))
);

CREATE TABLE HIST_ADICAO_PRODUTO_CARRINHO(
    CODIGO_HISTORICO INT, 
    FINALIZOU CHAR(1) NOT NULL, 

    CONSTRAINT CK_COMPRA_FINALIZADA CHECK (FINALIZOU IN ('S','N')),
    CONSTRAINT FK_HIST_ADICAO_CARRINHO FOREIGN KEY (CODIGO_HISTORICO)
        REFERENCES HISTORICO(CODIGO),
    CONSTRAINT PK_ADICAO_CARRINHO PRIMARY KEY (CODIGO_HISTORICO)
);

CREATE TABLE HIST_VISUALIZACAO_PRODUTO(
    CODIGO_HISTORICO INT, 
    TEMPO_PAGINA INT NOT NULL, 

    CONSTRAINT CK_TEMPO_POSITIVO CHECK (TEMPO_PAGINA>=0),
    CONSTRAINT FK_HIST_VISUALIZACAO_PRODUTO_CODIGO_HISTORICO FOREIGN KEY (CODIGO_HISTORICO)
        REFERENCES HISTORICO(CODIGO),
    CONSTRAINT PK_HIST_VISUALIZACAO_PRODUTO PRIMARY KEY (CODIGO_HISTORICO)
);

-- RELACIONAMENTOS ----------------------------------------------------------------

CREATE TABLE RESGATE_CUPOM (
    CODIGO_CLIENTE  INT NOT NULL,
    CODIGO_CUPOM    INT NOT NULL,
    DATA_RESGATE    DATE NOT NULL,

    CONSTRAINT PK_RESGATE_CUPOM PRIMARY KEY (CODIGO_CLIENTE, CODIGO_CUPOM),
    CONSTRAINT FK_RESGATE_CLIENTE FOREIGN KEY (CODIGO_CLIENTE)   
        REFERENCES CLIENTE(CODIGO),
    CONSTRAINT FK_RESGATE_CUPOM FOREIGN KEY (CODIGO_CUPOM)
        REFERENCES CUPOM_DESCONTO(CODIGO)
);

CREATE TABLE AVALIACAO_PRODUTO (
    COD_PRODUTO         INT,
    COD_ORDEM_COMPRA    INT,
    DESCRICAO           VARCHAR(255),
    NOTA                INT NOT NULL,
    CONSTRAINT CK_AVALIACAO_PRODUTO_NOTA_POSITIVA CHECK (NOTA >=0 AND NOTA <= 5),
    CONSTRAINT PK_AVALIACAO_PRODUTO PRIMARY KEY (COD_PRODUTO,COD_ORDEM_COMPRA),
    CONSTRAINT FK_AVALIACAO_PRODUTO_COD_PRODUTO FOREIGN KEY (COD_PRODUTO) 
        REFERENCES PRODUTO (CODIGO),
    CONSTRAINT FK_AVALIACAO_PRODUTO_COD_ORDEM_COMPRA FOREIGN KEY (COD_ORDEM_COMPRA) 
        REFERENCES ORDEM_COMPRA (CODIGO)
);

CREATE TABLE CUPOM_CATEGORIA (
    CODIGO          INT,
    COD_CATEGORIA   INT, 
    CONSTRAINT FK_CUPOMCATEGRIA_COD_CUPOM FOREIGN KEY (CODIGO) 
        REFERENCES CUPOM_DESCONTO(CODIGO) 
        ON DELETE CASCADE,
    CONSTRAINT FK_CUPOMCATEGORIA_COD_CATEGORIA FOREIGN KEY (COD_CATEGORIA) 
        REFERENCES CATEGORIA(CODIGO) 
        ON DELETE CASCADE,
    CONSTRAINT PK_CUPOM_CATEGORIA PRIMARY KEY (CODIGO, COD_CATEGORIA)
);

CREATE TABLE PRODUTO_ORDEM_COMPRA (
    COD_PRODUTO         INT,
    COD_ORDEM_COMPRA    INT,
    CONSTRAINT PK_PRODUTO_ORDEM_COMPRA PRIMARY KEY (COD_PRODUTO, COD_ORDEM_COMPRA),
    CONSTRAINT FK_PRODUTO_ORDEM_COMPRA_COD_PRODUTO FOREIGN KEY (COD_PRODUTO) 
        REFERENCES PRODUTO (CODIGO),
    CONSTRAINT FK_PRODUTO_ORDEM_COMPRA_COD_ORDEM_COMPRA FOREIGN KEY (COD_ORDEM_COMPRA) 
        REFERENCES ORDEM_COMPRA (CODIGO)
);

CREATE TABLE CENTRO_DISTRIBUICAO_INVENTARIO (
    COD_PRODUTO         INT,
    COD_CENTRO_DISTR    INT,
    QUANTIDADE          INT NOT NULL,

    CONSTRAINT PK_CENTRO_DISTR_INVENTARIO PRIMARY KEY (COD_PRODUTO, COD_CENTRO_DISTR),
    CONSTRAINT FK_INVENTARIO_PRODUTO FOREIGN KEY (COD_PRODUTO)
        REFERENCES PRODUTO(CODIGO),
    CONSTRAINT FK_INVENTARIO_CENTRO_DISTR FOREIGN KEY (COD_CENTRO_DISTR)
        REFERENCES CENTRO_DISTRIBUICAO(CODIGO),
    CONSTRAINT CK_QUANT_INVENT_POSITIVA CHECK (QUANTIDADE >= 0)
);

CREATE TABLE PRODUTO_CARRINHO (
    QUANTIDADE     INT NOT NULL,
    COD_CARRINHO    INT,
    COD_PRODUTO     INT,
    CONSTRAINT FK_PRODUTO_CARRINHO_CODCARRINHO FOREIGN KEY (COD_CARRINHO) 
        REFERENCES CARRINHO(CODIGO) 
        ON DELETE CASCADE,
    CONSTRAINT FK_PRODUTO_CARRINHO_CODPRODUTO FOREIGN KEY (COD_PRODUTO) 
        REFERENCES PRODUTO(CODIGO) 
        ON DELETE CASCADE,
    CONSTRAINT PK_PRODUTO_CARRINHO PRIMARY KEY(COD_CARRINHO, COD_PRODUTO),
    CONSTRAINT QUANTIDADE_POSITIVA CHECK (QUANTIDADE >= 0)
);

CREATE TABLE FORNECIMENTO_PRODUTO (
    COD_PRODUTO     INT,
    COD_FORNECEDOR  INT,
    CONSTRAINT FK_FORNECIMENTO_COD_PRODUTO FOREIGN KEY (COD_PRODUTO) 
        REFERENCES PRODUTO(CODIGO),
    CONSTRAINT FK_FORNECIMENTO_COD_FORNECEDOR FOREIGN KEY (COD_FORNECEDOR) 
        REFERENCES FORNECEDOR(CODIGO),
    CONSTRAINT PK_FORNECIMENTO_PRODUTO PRIMARY KEY (COD_PRODUTO, COD_FORNECEDOR)
);
